name: CI/CD

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Fetching local repo
        uses: actions/checkout@v3

      - name: Login to the GHCR
        run: docker login --username ${{ github.repository_owner }} --password ${{ github.token }} ghcr.io
  
      - name: Build Docker images
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/healthy:latest .
          docker tag ghcr.io/${{ github.repository_owner }}/healthy:latest ghcr.io/${{ github.repository_owner }}/healthy:${{ github.ref_name }}
          
          # Push the images to ghcr
          docker build -t ghcr.io/${{ github.repository_owner }}/my_celery:latest --file celery/Dockerfile .
          docker tag ghcr.io/${{ github.repository_owner }}/my_celery:latest ghcr.io/${{ github.repository_owner }}/my_celery:${{ github.ref_name }}

      - name: Push the image to ghcr Hub
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/healthy:latest
          docker push ghcr.io/${{ github.repository_owner }}/healthy:${{ github.ref_name }}

          docker push ghcr.io/${{ github.repository_owner }}/my_celery:latest
          docker push ghcr.io/${{ github.repository_owner }}/my_celery:${{ github.ref_name }}


  deploy_to_testing_environment:
    env:
      SERVER: ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}
      SOURCE: .env docker-compose.yml nginx
      DESTINATION: ~/core/
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get the repo
        uses: actions/checkout@v4

      - name: Sync files
        run: |
          sudo apt install sshpass -y

          # Copy the main services
          sshpass -p "${{ secrets.VPS_PASS }}" rsync -aP -e "ssh -p ${{ secrets.VPS_PORT }}" ${{ env.SOURCE }} ${{ env.SERVER }}:${{ env.DESTINATION }}


      - name: Deploy now
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASS }}
          port: ${{ secrets.VPS_PORT }}
          script_stop: true
          script: |
            # Login to ghcr
            docker login --username ${{ github.repository_owner }} --password ${{ github.token }} ghcr.io

            cd ~/core
            # Pull the new image
            docker-compose pull web celery

            # Stop and remove the old container
            docker rm -fv core_web_1 core_celery_1

            # Up everything
            docker-compose up -d

            # Run migrations
            # Nothing yet

            # Run DB seeds
            # Nothing yet

            # Some space clean up
            docker image prune -f

            # Inform me/us
            # nothing yet